public class Person {

	private String name;
	private String surname;
	private String a="test";
	
	Person(String name, String surname){
		this.name=name;
		this.surname=surname;
	}

}


public class Point {

	private int x;
	private int y;
	private String a="test";
	
	Point(int x, int y){
		this.x=x;
		this.y=y;
	}
	
}


import java.lang.reflect.Field;


public class Debug {

	public static void fields(Object obj) throws IllegalArgumentException, IllegalAccessException{
		for(Field field : obj.getClass().getDeclaredFields()){
			boolean oldFlag=field.isAccessible();
			field.setAccessible(true);
			System.out.println("Field: " +field.getName()+" => " + field.getType().getTypeName() +", " +field.get(obj));
			field.setAccessible(oldFlag);
		}
		
	}
	public static void main(String[] args) throws IllegalArgumentException, IllegalAccessException {
		Point point=new Point(1,2);
		Person person = new Person("John", "Rambo");
		fields(point);
		fields(person);
	}

}
